name: Default

concurrency: default

on:
  push:
    branches:
      - feature/**
      - release/**
      - fix/**
      - chore/**
      - master

env:
  TKM_ORG_A_ID: ${{ secrets.TKM_ORG_A_ID }}
  TKM_ORG_A_MASTER_ACCOUNT_ID: ${{ secrets.TKM_ORG_A_MASTER_ACCOUNT_ID }}
  TKM_ORG_A_MASTER_ACCOUNT_NAME: ${{ secrets.TKM_ORG_A_MASTER_ACCOUNT_NAME }}
  TKM_ORG_A_ACCOUNT_1_ID: ${{ secrets.TKM_ORG_A_ACCOUNT_1_ID }}
  TKM_ORG_A_ACCOUNT_2_ID: ${{ secrets.TKM_ORG_A_ACCOUNT_2_ID }}
  TKM_ORG_A_ACCOUNT_3_ID: ${{ secrets.TKM_ORG_A_ACCOUNT_3_ID }}
  TKM_ORG_A_ACCOUNT_4_ID: ${{ secrets.TKM_ORG_A_ACCOUNT_4_ID }}
  TKM_ORG_A_ACCOUNT_5_ID: ${{ secrets.TKM_ORG_A_ACCOUNT_5_ID }}

  TKM_ORG_B_MASTER_ACCOUNT_ID: ${{ secrets.TKM_ORG_B_MASTER_ACCOUNT_ID }}

  TKM_ORG_3_MASTER_ACCOUNT_ID: ${{ secrets.TKM_ORG_3_MASTER_ACCOUNT_ID }}
  TKM_ORG_3_ACCOUNT_01_ID: ${{ secrets.TKM_ORG_3_ACCOUNT_01_ID }}
  TKM_ORG_3_ACCOUNT_01_NAME: ${{ secrets.TKM_ORG_3_ACCOUNT_01_NAME }}
  TKM_ORG_3_ACCOUNT_01_EMAIL: ${{ secrets.TKM_ORG_3_ACCOUNT_01_EMAIL }}
  TKM_ORG_3_ACCOUNT_02_ID: ${{ secrets.TKM_ORG_3_ACCOUNT_02_ID }}
  TKM_ORG_3_ACCOUNT_03_ID: ${{ secrets.TKM_ORG_3_ACCOUNT_03_ID }}

  RECYCLER_HOSTNAME: ${{ secrets.RECYCLER_HOSTNAME }}
  RECYCLER_BASEPATH: ${{ secrets.RECYCLER_BASEPATH }}
  RECYCLER_USERNAME: ${{ secrets.RECYCLER_USERNAME }}
  RECYCLER_PASSWORD: ${{ secrets.RECYCLER_PASSWORD }}

jobs:

  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        id: node_modules
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.node_modules.outputs.cache-hit != 'true'
        run: yarn
      - name: Dependency check
        run: yarn depcheck
      - name: Build
        run: yarn build
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}

  unit-test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}
      - run: yarn test

  stacks-test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}
      - run: yarn workspace integration-test-stacks integration-test

  deployment-targets-test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}
      - run: yarn workspace integration-test-deployment-targets integration-test

  organization-creation-test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}
      - run: yarn workspace integration-test-organization-creation integration-test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TKM_ORG_B_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TKM_ORG_B_AWS_SECRET_ACCESS_KEY }}

  organization-test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}
      - run: yarn workspace integration-test-organization integration-test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TKM_ORG_A_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TKM_ORG_A_AWS_SECRET_ACCESS_KEY }}

  organization2-test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}
      - run: yarn workspace integration-test-organization2 integration-test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TKM_ORG_3_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TKM_ORG_3_AWS_SECRET_ACCESS_KEY }}

  docs:
    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/master'
    needs:
      - unit-test
      - stacks-test
      - deployment-targets-test
      - organization-creation-test
      - organization-test
      - organization2-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.4.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        with:
          path: packages
          key: packages-${{ github.sha }}
      - name: Build API docs
        run: yarn api-docs
      - run: ./ci/publish-api-docs.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DOCS_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DOCS_AWS_SECRET_ACCESS_KEY }}
          DOCS_BASE: /api-docs/release/next/